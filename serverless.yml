service: card-tokenization
frameworkVersion: "3"

useDotenv: true

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  environment:
    POSTGRESQL_HOST: ${env:DB_HOST}
    POSTGRESQL_PORT: ${env:DB_PORT}
    POSTGRESQL_USERNAME: ${env:DB_USERNAME}
    POSTGRESQL_PASSWORD: ${env:DB_PASSWORD}
    POSTGRESQL_DB_NAME: ${env:DB_NAME}
    REDIS_URI: ${env:REDIS_URI}

functions:
  migrate:
    handler: src/handlers/migrateHandler.migrateTables
    events:
      - httpApi:
          path: /migration
          method: post
  tokenizer-card:
    handler: src/handlers/tokenizerCardHandler.createTokenHandler
    events:
      - httpApi:
          path: /tokens
          method: post
  card:
    handler: src/handlers/cardHandler.getCardHandler
    events:
      - httpApi:
          path: /card
          method: get

plugins:
  - serverless-esbuild
  - serverless-offline

custom:
  esbuild:
    bundle: true
    minify: true
    external:
      - "aws-sdk"
      - "pg"
      - "pg-hstore"
      - "redis"
      - "sequelize"
    watch:
      pattern: ["src/**/*.ts"]
      ignore: ["build/**/*", ".serverless", "coverage"]
  serverless-offline:
    httpPort: 4000 # Puerto HTTP para el servidor local
    lambdaPort: 3002 # Puerto para invocar funciones Lambda localmente
    pattern: "src/**/*.ts"
